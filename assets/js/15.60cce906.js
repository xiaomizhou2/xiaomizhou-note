(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{433:function(t,a,n){"use strict";n.r(a);var e=n(62),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"mysql存储过程及函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mysql存储过程及函数"}},[t._v("#")]),t._v(" MySQL存储过程及函数")]),t._v(" "),n("h3",{attrs:{id:"_1-存储过程和函数概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-存储过程和函数概述"}},[t._v("#")]),t._v(" 1. 存储过程和函数概述")]),t._v(" "),n("p",[t._v("​\t存储过程和函数是"),n("strong",[t._v("事先经过编译并存储")]),t._v("在数据库中的一段SQL语句的集合，调用存储过程和函数可以简化应用开发人员的很多工作，减少数据在数据库和应用服务器之间的传输，对于提高数据处理的效率是有好处的。")]),t._v(" "),n("p",[t._v("存储过程和函数的区别在于函数必须有返回值,而存储过程没有")]),t._v(" "),n("p",[t._v("函数：是一个有返回值的过程")]),t._v(" "),n("p",[t._v("过程：是一个没有返回值的函数")]),t._v(" "),n("h3",{attrs:{id:"_2-创建及调用存储过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建及调用存储过程"}},[t._v("#")]),t._v(" 2. 创建及调用存储过程")]),t._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("CREATE PROCEDURE procedure_name([proc_parameter[, ...]])\nbegin\n-- SQL语句\nend;\n\n########示例#############\nCREATE PROCEDURE pro_test1()\nbegin\nSELECT 'HELLO MYSQL';\nend;\n\nDELIMITER 该关键字用来声明SQL语句的分隔符，默认情况下MySQL\n\n-- 调用存储过程\nCALL procedure_name\n")])])]),n("h3",{attrs:{id:"_3-查看及删除存储过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-查看及删除存储过程"}},[t._v("#")]),t._v(" 3. 查看及删除存储过程")]),t._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("-- 查询db_name数据库中的所有的存储过程\nSELECT name FROM mysql.proc WHERE db = 'db_name';\n\n-- 查询存储过程的状态信息\nSHOW PROCEDURE status;\n\n-- 查询某个存储过程的定义\nSHOW CREATE PROCEDURE proc_name;\n\n-- 删除存储过程\nDROP PROCEDURE [IF EXISTS] proc_name;\n")])])]),n("h3",{attrs:{id:"_4-语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-语法"}},[t._v("#")]),t._v(" 4. 语法")]),t._v(" "),n("p",[t._v("存储过程是可以编程的，意味着可以使用变量、表达式、控制结构来完成比较复杂的功能")]),t._v(" "),n("h5",{attrs:{id:"_4-1-变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-变量"}},[t._v("#")]),t._v(" 4.1 变量")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("DECLARE")]),t._v(" "),n("p",[t._v("通过DECLARE可以定义一个局部变量，该变量的作用范围只能在BEGIN...END块中。")]),t._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("DECLARE var_name[, ...] type [DEFAUIT value]\n")])])]),n("p",[t._v("示例：")]),t._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("CREATE PROCEDURE pro_test2()\nBEGIN\n\tDECLARE num int DEFAULT 5;\n\tSELECT num;\nEND;\n")])])])]),t._v(" "),n("li",[n("p",[t._v("SET")]),t._v(" "),n("p",[t._v("直接赋值使用SET，可以赋常量或者赋表达式，具体语法如下：")]),t._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("SET var_name = expr[, var_name = expr]...\n")])])]),n("p",[t._v("示例：")]),t._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("CREATE PROCEDURE pro_test3()\nBEGIN\n\tDECLARE NAME VARCHAR(20);\n\tSET NAME = 'MYSQL';\n\tSELECT NAME;\nEND;\n")])])]),n("p",[t._v("也可以使用SELECT...INTO方式进行赋值操作：")]),t._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("CREATE PROCEDURE pro_test5()\nBEGIN\n\tDECLARE countnum int;\n\tSELECT COUNT(*) INTO countnum FROM city;\n\tSELECT countnum;\nEND;\n")])])])])]),t._v(" "),n("h5",{attrs:{id:"_4-2-if-条件判断"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-if-条件判断"}},[t._v("#")]),t._v(" 4.2 if 条件判断")]),t._v(" "),n("p",[t._v("语法结构：")]),t._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("IF search_condition THEN statement_list\n[ELSEIF search_condition THEN statement_list] ...\n[ELSE statement_list]\nEND IF;\n")])])]),n("p",[t._v("示例：")]),t._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("-- 根据年龄判断所处年龄段\n\n0-18 -- 未成年\n\n18-30 -- 青少年\n\n30-50 -- 中年\n\n50以上 -- 老年\n\n# 实现语法\nCREATE PROCEDURE pro_test4()\nBEGIN\n\t-- 定义变量\n\tDECLARE age int DEFAULT 18;\n\tDECLARE age_desc VARCHAR(50) DEFAULT '';\n\t-- IF判断语句\n\tIF age >= 0 AND age < 18 THEN SET age_desc = '未成年';\n\tELSEIF age >= 18 AND age <= 30 THEN SET age_desc = '青少年';\n\tELSEIF age > 30 AND age <= 50 THEN SET age_desc = '中年';\n\tELSE SET age_desc = '老年';\n\tEND IF;\n\t-- 查询\n\tSELECT age_desc;\nEND;\n")])])]),n("h5",{attrs:{id:"_4-3-传递参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-传递参数"}},[t._v("#")]),t._v(" 4.3 传递参数")]),t._v(" "),n("p",[t._v("语法格式：")]),t._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("CREATE PROCEDURE proc_name([in / out / inout] 参数名 参数类型)\n\nIN：该参数可以作为输入，也就是需要调用方传入值，默认\nOUT：该参数作为输出，也就是该参数可以作为返回值\nINOUT：既可以作为输入参数吗，也可以作为输出参数\n")])])]),n("ul",[n("li",[n("p",[t._v("IN - 输入")]),t._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("-- 根据定义的年龄变量，判断年龄段信息\nCREATE PROCEDURE pro_test5(in age int)\nBEGIN\n\tDECLARE age_desc VARCHAR(50) DEFAULT '';\n\t-- IF判断语句\n\tIF age >= 0 AND age < 18 THEN SET age_desc = '未成年';\n\tELSEIF age >= 18 AND age <= 30 THEN SET age_desc = '青少年';\n\tELSEIF age > 30 AND age <= 50 THEN SET age_desc = '中年';\n\tELSE SET age_desc = '老年';\n\tEND IF;\n\t-- 查询\n\tSELECT age_desc;\nEND;\n")])])])]),t._v(" "),n("li",[n("p",[t._v("OUT-输出")]),t._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("-- 根据定义的年龄变量，获取年龄段信息\nCREATE PROCEDURE pro_test6(in age int, out age_desc varchar(50))\nBEGIN\n\t-- IF判断语句\n\tIF age >= 0 AND age < 18 THEN SET age_desc = '未成年';\n\tELSEIF age >= 18 AND age <= 30 THEN SET age_desc = '青少年';\n\tELSEIF age > 30 AND age <= 50 THEN SET age_desc = '中年';\n\tELSE SET age_desc = '老年';\n\tEND IF;\nEND;\n\n-- 调用存储过程\nCALL pro_test6(20, @age_desc); \n\nSELECT @age_desc;\n")])])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("小知识")])]),t._v(" "),n("p",[t._v("@age_desc：用户会话变量，代表整个会话过程中他是有作用的，这个类似于全局变量一样")]),t._v(" "),n("p",[t._v("@@global.sort_buffer_size：这种叫做系统变量")])])]),t._v(" "),n("h5",{attrs:{id:"_4-4-case-结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-case-结构"}},[t._v("#")]),t._v(" 4.4 case 结构")]),t._v(" "),n("p",[t._v("语法结构：")]),t._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("-- 方式一\nCASE case_value\n\tWHEN when_value THEN statement_list\n\t[WHEN when_value THEN statement_list] ...\n\t[ELSE statement_list]\nEND CASE;\n\n-- 方式二\nCASE\n\tWHEN search_condition THEN statement_list\n\t[WHEN search_condition THEN statement_list] ...\n\t[ELSE statement_list]\nEND CASE;\n")])])]),n("p",[t._v("示例：")]),t._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("-- 给定一个月份，然后计算出所在的季度\nCREATE PROCEDURE pro_test7(in month int, out desc varchar(50))\nBEGIN\n\tCASE \n\tWHEN month <= 3 AND month >= 1 THEN SET desc = '春'\n\tWHEN month <= 6 AND month >= 4 THEN SET desc = '夏'\n\tWHEN month <= 9 AND month >= 7 THEN SET desc = '秋'\n\tELSE SET desc = '冬'\n\tEND CASE;\nEND;\n")])])]),n("h5",{attrs:{id:"_4-5-while循环"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-while循环"}},[t._v("#")]),t._v(" 4.5 while循环")]),t._v(" "),n("p",[t._v("语法结构：")]),t._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("WHILE search_condition DO\n\tstatement_list\nEND WHILE;\n")])])]),n("p",[t._v("示例：")]),t._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("-- 计算从1加到n的值\nCREATE PROCEDURE pro_test8(n int)\nBEGIN\n\tDECLARE total int DEFAULT 0;\n\tDECLARE start int DEFAULT 0;\n\t\n\tWHILE start <= n DO\n\tSET total = total + start;\n\tSET start++;\n\tEND WHILE;\n\t\n\tSELECT total;\nEND;\n")])])]),n("h5",{attrs:{id:"_4-6-repeat循环"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-repeat循环"}},[t._v("#")]),t._v(" 4.6 repeat循环")]),t._v(" "),n("p",[t._v("有条件的循环控制语句，当满足条件的时候退出循环。while是满足条件才执行，repeat是满足条件就推出循环。")]),t._v(" "),n("p",[t._v("语法结构：")]),t._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("REPEAT\n\tstatement_list\n\tUNTIL search_condition\nEND REPEAT;\n")])])]),n("p",[t._v("示例：")]),t._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("-- 计算从1加到n的值\nCREATE PROCEDURE pro_test9(n int)\nBEGIN\n\tDECLARE total int DEFAULT 0;\n\t\n\tREPEAT\n\tSET total = total + n;\n\tSET n = n - 1;\n\tUNTIL n = 0\n\tEND REPEAT;\n\t\n\tSELECT total;\nEND;\n")])])]),n("h5",{attrs:{id:"_4-7-loop循环"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-loop循环"}},[t._v("#")]),t._v(" 4.7 loop循环")]),t._v(" "),n("p",[t._v("LOOP实现简单的循环，退出循环的条件需要使用其他的语句定义，通常可以使用LEAVE语句实现，具体语法如下：")]),t._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("[begin_label:] LOOP\n\tstatement_list\nEND LOOP [end_label]\n")])])]),n("p",[t._v("如果不在statement_list 中增加退出循环的语句，那么LOOP语句可以用来实现简单的死循环。")]),t._v(" "),n("p",[t._v("示例：")]),t._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("-- 计算从1加到n的值\nCREATE PROCEDURE pro_test10(n int)\nBEGIN\n\tDECLARE total int DEFAULT 0;\n\t\n\tins: LOOP\n\tIF n <=0 THEN \n\t\tLEAVE ins;\n\tEND IF;\n\tSET total = total + n;\n\tSET n = n - 1;\n\tEND LOOP ins;\n\t\n\tSELECT total;\nEND;\n")])])]),n("h5",{attrs:{id:"_4-8-游标、光标"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-游标、光标"}},[t._v("#")]),t._v(" 4.8 游标、光标")]),t._v(" "),n("p",[t._v("游标是用来存储查询结果集的数据类型，在存储过程和函数中可以使用光标对结果集进行循环的处理。光标的使用包括光标的声明、OPEN、FETCH和CLOSE,其语法分别如下：")]),t._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("-- 声明光标\nDECLARE cursor_name CURSOR FOR select_statement;\n\n-- OPEN光标\nOPEN cursor_name;\n\n-- FETCH 光标\nFETCH cursor_name INTO var_name[, var_name] ...\n\n-- CLOSE 光标\nCLOSE cursor_name;\n")])])]),n("h3",{attrs:{id:"_5-存储函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-存储函数"}},[t._v("#")]),t._v(" 5. 存储函数")]),t._v(" "),n("p",[t._v("语法结构：")]),t._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("CREATE FUNCTION function_name([param type ...])\nRETURNS type\nBEGIN\n\t...\nEND;\n")])])]),n("p",[t._v("示例：")]),t._v(" "),n("div",{staticClass:"language-mysql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("-- 定义一个存储过程，请求满足条件的总记录数\nCREATE FUNCTION count_city(countryId int)\nRETURNS int\nBEGIN\n\tDECLARE cnum int;\n\t\n\tSELECT count(*) INTO cnum FROM city country_id = countryId;\n\t\n\treturn cnum;\nEND;\n\n-- 调用存储函数\nSELECT count_city(1);\n")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);