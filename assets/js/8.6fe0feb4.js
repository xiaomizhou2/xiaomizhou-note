(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{424:function(t,a,s){"use strict";s.r(a);var e=s(62),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"docker-镜像结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-镜像结构"}},[t._v("#")]),t._v(" docker 镜像结构")]),t._v(" "),s("p",[t._v("镜像就是将应用程序及其需要的系统函数库、环境、配置、依赖打包而成。")]),t._v(" "),s("ol",[s("li",[t._v("基础镜像：应用依赖的系统函数库、环境、配置、文件等")]),t._v(" "),s("li",[t._v("层：在基础镜像的基础上添加安装包、依赖、配置等，每次操作都形成新的一层。")]),t._v(" "),s("li",[t._v("入口：镜像运行入口，一般是程序启动的脚本和参数")])]),t._v(" "),s("h3",{attrs:{id:"dockerfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[t._v("#")]),t._v(" Dockerfile")]),t._v(" "),s("p",[s("strong",[t._v("Dockerfile")]),t._v("就是一个文本文件，其中包含一个个的指令，用指令来说明要执行什么操作来构建镜像。每一个指令都会形成一层Layer。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("指令")]),t._v(" "),s("th",[t._v("说明")]),t._v(" "),s("th",[t._v("示例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("FROM")]),t._v(" "),s("td",[t._v("指定基础镜像")]),t._v(" "),s("td",[t._v("FROM centos:6")])]),t._v(" "),s("tr",[s("td",[t._v("ENV")]),t._v(" "),s("td",[t._v("设置环境变量,可在后面指令使用")]),t._v(" "),s("td",[t._v("ENV key value")])]),t._v(" "),s("tr",[s("td",[t._v("COPY")]),t._v(" "),s("td",[t._v("拷贝本地文件到镜像的指定目录")]),t._v(" "),s("td",[t._v("COPY ./mysql-5.7.rpm /tmp")])]),t._v(" "),s("tr",[s("td",[t._v("RUN")]),t._v(" "),s("td",[t._v("执行Linux的shell命令,一般是安装过程的命令")]),t._v(" "),s("td",[t._v("RUN yum install gcc")])]),t._v(" "),s("tr",[s("td",[t._v("EXPOSE")]),t._v(" "),s("td",[t._v("指定容器运行时监听的端口,给镜像使用者看的")]),t._v(" "),s("td",[t._v("EXPOSE 8888")])]),t._v(" "),s("tr",[s("td",[t._v("ENTRYPOINT")]),t._v(" "),s("td",[t._v("镜像中应用的启动命令,容器运时调用")]),t._v(" "),s("td",[t._v("ENTRYPOINT java -jar xx.jar")])])])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.docker.com/engine/reference/builder/",target:"_blank",rel:"noopener noreferrer"}},[t._v("语法doc"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("dockerfile 构建示例")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 指定基础镜像\nFROM ubuntu:16.04\n# 配置环境变量，JDK的安装目录\nENV JAVA_DIR=/usr/local\n\n# 拷贝jdk和java项目的包\nCOPY ./jdk8.tar.gz $JAVA_DIR/\nCOPY ./docker-demo.jar /tmp/app.jar\n\n# 安装JDK\nRUN cd $JAVA_DIR \\\n && tar -xf ./jdk8.tar.gz \\\n && mv ./jdk1.8.0_144 ./java8\n \n# 配置环境变量\nENV JAVA_HOME=$JAVA_DIR/java8\nENV PATH=$PATH:$JAVA_HOME/bin\n\n# 暴露端口\nEXPOSE 8090\n\n# 入口 java项目的启动命令\nENTRYPOINT java -jar /tmp/app.jar\n")])])]),s("p",[t._v("构建项目命令")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# . dockerfile 所在目录\n\ndocker build -t <镜像名称>:<版本号> .\n")])])]),s("h4",{attrs:{id:"现成的安装好jdk的基础镜像名称-java-8-alpine"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#现成的安装好jdk的基础镜像名称-java-8-alpine"}},[t._v("#")]),t._v(" 现成的安装好jdk的基础镜像名称  "),s("strong",[t._v("java:8-alpine")])]),t._v(" "),s("h3",{attrs:{id:"dokcercompose"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dokcercompose"}},[t._v("#")]),t._v(" DokcerCompose")]),t._v(" "),s("p",[t._v("Docker Compose 可以基于Compose文件帮我们快速的部署分布式应用，而无需手动一个个创建和运行容器")]),t._v(" "),s("p",[t._v("Compose文件是一个文本文件，通过指令定义集群中的每个容器如何运行")]),t._v(" "),s("p",[t._v("配置文件示例")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.8"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mysql")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("5.7.25\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" MYSQL_ROOT_PASSWORD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /tmp/mysql/data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/lib/mysql\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /tmp/mysql/conf/hmy.cnf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/mysql/conf.d/hmy.cnf\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("web")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 8090"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8090")]),t._v("\n")])])]),s("h3",{attrs:{id:"docker私有镜像仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker私有镜像仓库"}},[t._v("#")]),t._v(" Docker私有镜像仓库")]),t._v(" "),s("p",[t._v("搭建镜像仓库可以基于Docker官方提供的DockerRegistry来实现")]),t._v(" "),s("h4",{attrs:{id:"简化版镜像仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简化版镜像仓库"}},[t._v("#")]),t._v(" 简化版镜像仓库")]),t._v(" "),s("p",[t._v("Docker官方的Docker Registry 是一个基础版本的Docker镜像仓库，具备仓库管理的完整功能，但是没有图形化界面")]),t._v(" "),s("p",[t._v("搭建命令：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run -d "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --restat"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("always "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --name registry "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v(":5000\n    -v registry-data:/var/lib/registry "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    registry\n")])])]),s("h4",{attrs:{id:"带有图形化界面的仓库版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#带有图形化界面的仓库版本"}},[t._v("#")]),t._v(" 带有图形化界面的仓库版本")]),t._v(" "),s("p",[t._v("使用Docker Compose 部署带有图形化界面的Docker Registry")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("version: '3.0'\nservices: \n    registry: \n        image: registry\n        volumes: \n          - ./registry-data:/var/lib/registry\n    ui:\n        image: joxit/docker-registry-ui:static\n        ports:\n          - 8080:80\n        environment:\n          - REGISTRY_TITLE=私有仓库名称\n          - REGISTRY_URL=http://registry:5000\n        depends_on:\n          - registry\n")])])]),s("h4",{attrs:{id:"在私有仓库推送或拉取镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在私有仓库推送或拉取镜像"}},[t._v("#")]),t._v(" 在私有仓库推送或拉取镜像")]),t._v(" "),s("p",[t._v("推送镜像到私有镜像仓库必须先tag")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 1. 重新tag本地镜像，名字前缀为私有仓库地址\ndocker tag nginx:latest ip:port/nginx:1.0\n\n# 2.推送镜像\ndocker push ip:port/nginx:1.0\n\n# 3.拉取镜像\ndocker pull ip:port/nginx:1.0\n\n")])])]),s("p",[t._v("​")])])}),[],!1,null,null,null);a.default=n.exports}}]);